import distance
import sys
b="GCCGTCAAGGCAGTAAAAGGAGGTGCGGCCAACCTGCAAGATTGGTTACCGGATGTATCGGAGCGTGGGGTCGTTGAGAAGCAGTAAGGGTCTGATACGGGGCTGGTCGACGGAGTGGTGACCTCAGATAGAGCAATCCCGGTCATGGGACGTTCTTCGGATAGAGCGCCTATTCAGCTAGTTATTCCCGCGTGTCCTTGTATAATGAGGCTAACGAGGTGCGCCCATTACGCGATTTAGCACCCAGGGACGCGAGCGTTCCGTAGATGAGCGCCAGTACGGTACCCGTTGTGTCTTAACTTCCAGCCCCTAGCGTGTCAGCGCTTTATCACCGCGCCGCAAGTATTGAAATGTAAAAGTACACGTCAAACAGGCGGTTCAATTCCCGTAGACTATATTAAGTCCATTCGAACCAGGAAATAAGAAAACACGCTATAGGATTCCCGCGTGTCCTTGTATAATGAGGCTAACGGAGGCAGCGCGCAATCCGGGCGCCCACTCGCCTAATCACTACCCCGTCTTGGAGGCCTGTTTGATCGGGTTGCCCTATCCACATCTATAAATGGTTGAAGTACCCGGGTCGATTTCCTGTATCGTTTCGTCCCATACTGCTACCTAATCGTCCGAGCATGTCTCCCTGGCAGTCTGACTCGCGAATAGATTCACTTCCCGCGTGTCCTTGTATAATGAGGCTAACGTCAAAGCATATTCCCGCGTGTCCTTGTATAATGAGGCTAACGCCGAAGCGATAAGGGAAGTTTTTTCTGCGATTCCTTCGGTCCGGTTTCTGTCCCAACATCGGACCCGATCAGCTCTCGTATTAACCAAGAAAGTGGGGATAATGATGCCGCTAACTTGCCTATTCGGTACGGAATCACGAGGGGAGCGGGTAGGCGGATGTTCTTGAACCAGTTACCGCTTAGAACCACCCCGAAATTCC"
a="ACATCCCGCGTGTCCTTGTATAATGAGGCTAACGTACCGCTAAGATGTTTATTCAGTCGGCCTGGTCATCTTAACAACCCGCAATGTTTGGGATTCCCGCGTGTCCTTGTATAATGAGGCTAACGAATACCCCCAACTTCCCGCGTGTCCTTGTATAATGAGGCTAACGTTTCGCGGGTAAGCAATCTATCGCGACGACGGAAAAGCCGCCAAAGTTCCATCCGACGGGTAATCATGAGCGATTCATTATGTCCGTTCATTAGACATGCAAGGGCACGCACGGAATCCGGTGGGGATCGCTATTCCCGCGTGTCCTTGTATAATGAGGCTAACGCTGCAGGGTGATTCCCGCGTGTCCTTGTATAATGAGGCTAACGCACACCAACCCGTAGCGTCAACGGTGCGGTGAACTTATGGGGATTTTCGTAAAAGAGTGCTGCGACAACGGTCCCGACTCTGAATATGGTAGGAGGTGCCTAGCGCCATCCGGCGGATCAGGAAGCGGCCGACCTCCCCGCCATACATCCACGCCGTCAGTAAGTTGCTGCCGGTCTTGCGTGGAACATTTCCCGCGTGTCCTTGTATAATGAGGCTAACGAGCACCTGTGAGTCCCGCGTGTCCTTGTATAATGAGGCTAACGTCGAAGGATTCACAAGTGAGAGGCAATTACTTACCATCCTTTCAGCATGTTTTGTTGCTGATTAATAGATTGTAACGTTCTTCTACTTGCACTGGGCTGCTTCCTATGACATATCTTGGCTGCACCTCCTAAGCCCGATCTTCCCGCGTGTCCTTGTATAATGAGGCTAACGGGACGAGAGAAACATACTTTGTCCGAAAAGTGACGGGCCGTTCGCGTGGTTCGAG"
c=0
da=""
db=""
for j in range(32,41):
    for i in range(len(a)-j):
        c1=0
        for k in range(len(b)-j):
            if distance.hamming(a[i:i+j], b[k:k+j])<=3:
                c1+=1
                if c1>c:
                    c=c1
print c
c=0
da=a
db=b
a=db
b=da
for j in range(32,41):
    for i in range(len(a)-j):
        c1=0
        for k in range(len(b)-j):
            if distance.hamming(a[i:i+j], b[k:k+j])<=3:
                c1+=1
                if c1>c:
                    c=c1
print c
